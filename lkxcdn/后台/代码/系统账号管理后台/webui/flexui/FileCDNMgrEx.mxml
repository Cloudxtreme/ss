<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%">

	<mx:VBox x="0" y="0" width="100%" height="100%">

	<mx:HBox width="100%" >
		<mx:Label text="客户名称请不要使用全部缩写，以免跟现有脚本字段相同，可以参考使用拼音加上缩写！" fontWeight="bold" color="#FF0000" fontSize="20"/>
	</mx:HBox>
	
	<mx:HBox width="100%" >
		<mx:Label text="密钥:"/>
		<mx:TextInput id="mykey_textinput" displayAsPassword="true" text="" />
	</mx:HBox>

	<mx:Label text="-----客户信息-----" color="#2560F4" fontWeight="bold" horizontalCenter="0"/>
	<mx:HBox width="100%" >
		<mx:Label text="客户名称:"/>
		<mx:TextInput id="client_name" width="140" text="test" />
		<mx:Label text="FTP密码:"/>
		<mx:TextInput id="ftp_pass" width="140" text="test" />
		<mx:Label text="Nginx端口:"/>
		<mx:TextInput id="client_port" width="80" text="7020" />
		<mx:Label text="端口范围8500~9000" fontWeight="bold" color="#FF0000" fontSize="15"/>
	</mx:HBox>
	<mx:HBox width="100%" >
		<mx:Label text="描述:"/>
		<mx:TextInput id="client_desc" width="90%" />
	</mx:HBox>

	<mx:Label text="-----新增客户-----" color="#2560F4" fontWeight="bold" horizontalCenter="0"/>
	<mx:HBox width="100%" >
		<mx:Label text="1.创建平台账号"/>
		<mx:Button label="A.新建客户" click="AddClient()"/>
	</mx:HBox>	
	<mx:HBox width="100%" >
		<mx:Label text="2.Nginx设置"/>
		<mx:Button label="A.配置Nginx" click="AddNginx()"/>
		<mx:Button label="B.更新Nginx" click="UpdateNginx()"/>
		<mx:Button label="C.检查Nginx" click="CheckNginx()"/>
		<mx:Button label="D.重启Nginx" click="ReloadNginx()"/>
	</mx:HBox>	
	<!--
	<mx:HBox width="100%" >
		<mx:Label text="2.端口统计设置"/>
		<mx:Button label="A.配置端口统计" click="AddPortRate()"/>
		<mx:Button label="B.更新端口统计" click="UpdatePortRate()"/>
	</mx:HBox>
	-->	
	<mx:HBox width="100%" >
		<mx:Label text="2.流量统计设置"/>
		<mx:Button label="A.创建数据库" click="CreateClientFluxDB()"/>
		<mx:Button label="B.配置流量统计" click="AddClientFlux()"/>
		<mx:Button label="C.更新流量统计" click="UpdateClientFlux()"/>
	</mx:HBox>	
	<mx:HBox width="100%" >	
		<mx:Label text="3.创建FTP账号"/>
		<mx:Button label="A.创建FTP账号" click="AddFtp()"/>
	</mx:HBox>		

	<mx:Label text="输出窗口:"/>
	<mx:TextArea id="ret_textarea" width="90%" height="250" fontFamily="宋体" fontSize="13" backgroundColor="#000000" color="#01A109" />

	<mx:Label text="-----删除客户-----" color="#2560F4" fontWeight="bold" horizontalCenter="0"/>
	<mx:HBox width="100%" >
		<mx:Label text="1.删除FTP账号"/>
		<mx:Button label="A.删除FTP账号" click="DelFtp()"/>
	</mx:HBox>	
	<mx:HBox width="100%" >
		<mx:Label text="2.Nginx设置"/>
		<mx:Button label="A.配置Nginx" click="DelNginx()"/>
		<mx:Button label="B.更新Nginx" click="UpdateNginx()"/>
		<mx:Button label="C.检查Nginx" click="CheckNginx()"/>
		<mx:Button label="D.重启Nginx" click="ReloadNginx()"/>
	</mx:HBox>	
	<!--
	<mx:HBox width="100%" >
		<mx:Label text="2.端口统计设置"/>
		<mx:Button label="A.配置端口统计" click="DelPortRate()"/>
		<mx:Button label="B.更新端口统计" click="UpdatePortRate()"/>
	</mx:HBox>
	-->	
	<mx:HBox width="100%" >
		<mx:Label text="3.流量统计设置"/>
		<mx:Button label="A.删除数据库" click="DropClientFluxDB()"/>
		<mx:Button label="B.配置流量统计" click="DelClientFlux()"/>
		<mx:Button label="C.更新流量统计" click="UpdateClientFlux()"/>
	</mx:HBox>	
	<mx:HBox width="100%" >	
		<mx:Label text="4.管理平台设置"/>
		<mx:Button label="A.删除客户" click="DelClient()"/>
	</mx:HBox>		

	</mx:VBox>

	<mx:HTTPService id="HttpFileCDNMgr" url="" method="POST" showBusyCursor="true" requestTimeout="200" resultFormat="text"
	result="HttpRet(event)"
	fault="faultHandler(event)">  
	</mx:HTTPService>
	
	<mx:Script>
	<![CDATA[	
	import mx.events.ListEvent;
	import mx.events.CloseEvent;
	import mx.rpc.events.FaultEvent;
	import mx.rpc.events.ResultEvent;
	import mx.events.ItemClickEvent;
	import mx.controls.Alert;
	import Md5.MD5;
	
	public function Init():void
	{
		HttpFileCDNMgr.url = "http://" + this.parentApplication.g_serverip + "/webadmin/server/hotfile_cdn_mgr.php";
		GetClientList();
	}

	private function GetClientList():void
	{
		SendHttpWebCDNMgr('get_client_list');
	}
	
	private function AddFtp():void
	{
		SendHttpWebCDNMgr('add_ftp');
	}

	private function DelFtp():void
	{
		SendHttpWebCDNMgr('del_ftp');
	}
	
	private function AddNginx():void
	{
		SendHttpWebCDNMgr('add_nginx');
	}
	
	private function DelNginx():void
	{
		SendHttpWebCDNMgr('del_nginx');
	}
	
	private function UpdateNginx():void
	{
		SendHttpWebCDNMgr('update_nginx');
	}
	
	private function CheckNginx():void
	{
		SendHttpWebCDNMgr('check_nginx');
	}
	
	private function ReloadNginx():void
	{
		SendHttpWebCDNMgr('reload_nginx');
	}
	
	private function AddPortRate():void
	{
		SendHttpWebCDNMgr('add_port_rate');
	}
	
	private function DelPortRate():void
	{
		SendHttpWebCDNMgr('del_port_rate');
	}
	
	private function UpdatePortRate():void
	{
		SendHttpWebCDNMgr('update_port_rate');
	}
	
	private function CreateClientFluxDB():void
	{
		SendHttpWebCDNMgr('create_client_flux_db');
	}
	
	private function DropClientFluxDB():void
	{
		SendHttpWebCDNMgr('drop_client_flux_db');
	}
	
	private function AddClientFlux():void
	{
		SendHttpWebCDNMgr('add_client_flux');
	}
	
	private function DelClientFlux():void
	{
		SendHttpWebCDNMgr('del_client_flux');
	}
	
	private function UpdateClientFlux():void
	{
		SendHttpWebCDNMgr('update_client_flux');
	}
	
	private function AddClient():void
	{
		SendHttpWebCDNMgr('add_client');
	}
	
	private function DelClient():void
	{
		SendHttpWebCDNMgr('del_client');	
	}
	
	private function SendHttpWebCDNMgr(opcode:String):void
	{
		switch(opcode)
		{
			case 'get_client_list': _SendHttpWebCDNMgr(opcode); return;
		}
		
		Alert.show("您确定执行操作?", "温馨提示:", Alert.OK|Alert.CANCEL, this, 
					function(e:CloseEvent):void{myConfirm(e, opcode)}, 
					null, Alert.CANCEL);	
	}

	private function myConfirm(event:CloseEvent, opcode:String):void
	{  
		if(event.detail==Alert.OK)
		{   
			_SendHttpWebCDNMgr(opcode);
			return;
		}
		else if(event.detail==Alert.CANCEL)
		{
			return;
		} 
	}	

	private function _SendHttpWebCDNMgr(opcode:String):void
	{
		var sendInfo:Object;
		sendInfo = {
					user:this.parentApplication.g_struser,
					pass:this.parentApplication.g_strpass,
					opcode:opcode,
					skey:mykey_textinput.text,
					client_name:client_name.text,
					ftp_pass:ftp_pass.text,
					client_port:client_port.text,
					client_desc:client_desc.text
					};

		if( opcode == 'get_client_list' ) 
		{
			HttpFileCDNMgr.send(sendInfo);
			return;
		}

		if( mykey_textinput.text == '' )
		{
			Alert.show("请填写密钥 !");
			return;
		}
		
		//检查客户名部分
		if( client_name.text.length <= 2 )
		{
			Alert.show("用户名长度必须大于2个字符 !");
			return;
		}
		if( client_name.text == 'root' ||
			client_name.text == 'bin' ||
			client_name.text == 'ftp' ||
			client_name.text == 'sshd' ||
			client_name.text == 'nobody' )
			{
				Alert.show(client_name.text + " 请参考用户名格式 !");
				return;
			}
		if( client_name.text.indexOf(" ") >= 0 )
		{
			Alert.show(client_name.text + " 不要包含空格 !");
			return;			
		}
		
		//检查客户密码部分
		if( ftp_pass.text == '' )
		{
			Alert.show("用户密码不能为空 !");
			return;
		}
		if( ftp_pass.text.indexOf(" ") >= 0 )
		{
			Alert.show(ftp_pass.text + " 不要包含空格 !");
			return;			
		}		
		
		//检查端口部分
		var port:int = Number(client_port.text);
		if( port < 8500 || port > 9000 )
		{
			Alert.show("请参考端口范围 !");
			return;
		}
		
		//检查描述部分
		if( client_desc.text == '' )
		{
			Alert.show("请填写好描述 !");
			return;
		}
		
		HttpFileCDNMgr.send(sendInfo);
	}
	
	private function HttpRet(event:ResultEvent):void
	{
		ret_textarea.text = event.message.body.toString();
	}

	private function faultHandler(event:FaultEvent):void
	{
		Alert.show(event.fault.message,"无法连接服务器");
	}

	]]>
    </mx:Script>
    	
</mx:Canvas>
